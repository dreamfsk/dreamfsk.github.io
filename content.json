[{"title":"hexo主题之hexo-theme-yilia-plus","date":"2019-08-01T03:43:00.000Z","path":"2019/08/01/hexo主题之hexo-theme-yilia-plus/","text":"hexo-theme-yilia-plus 一个简洁优雅的hexo主题 ➡️ https://github.com/JoeyBling/hexo-theme-yilia-plus &#160;&#160;&#160;&#160;此项目是根据hexo-theme-yilia主题做了一些优化和改动，写这个项目的初衷就是深入学习Hexo。使用yilia主题可以快速迁移到yilia-plus 欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善 关于hexo-theme-yilia-plus主题在原基础上做了以下功能升级 手机端头像添加主页跳转链接 集成不蒜子访问量统计功能 网易云音乐插件 页面点击小红心效果 增加了多个SubNav导航图标展示 添加GitHub Ribbons(Fork me) 页脚 Litten自定义(弃用) 添加版权声明 添加百度站长平台主动推送 集成 gitment 评论 ➡️ https://github.com/JoeyBling/yilia-plus-demo 集成码云评论 ➡️ https://gitee.com/zhousiwei/yilia-plus-demo 添加网站成立年份 页面加载进度条 添加苹果图标 标签页标题切换功能 添加字数统计功能 添加文字输入特效 友情链接优化展示 左侧边栏动态图效果、左侧导航栏支持滚动 添加悬停预览图片效果 其他样式轻微调优、社交图标优化 优化配置是否在新窗口打开链接 fix bugs 添加看板娘动态模型插件 如果有小伙伴有新功能的意见或者改进欢迎给我提意见和建议~ 介绍 功能还很少，欢迎各位给我提意见和建议~ 本项目源于：https://github.com/litten/hexo-theme-yilia。向作者表示深深的敬意。 yilia-plus 是为 hexo 2.4+制作的主题。崇尚简约优雅，以及极致的性能。 你可以点击 我的博客 查看效果。 如果想体验手机浏览效果，可以扫一下二维码： 关于主题： 崇尚简约 追求移动端体验 希望把加载速度做到极致（努力中） 让大家把注意力放到内容上。这是本主题设计初衷 主题不支持IE6，7，8。以后也不会 一、外观常规 二、开发者&#160;&#160;&#160;&#160;为了性能和开发工程化考虑，yilia-plus 需要使用webpack进行构建生成。如果您对主题有一些定制化的需求，请参考wiki《yilia-plus源码目录结构及构建须知》 三、开始使用1、安装12cd ./themes/git clone --depth=1 https://github.com/JoeyBling/hexo-theme-yilia-plus.git ./yilia-plus 2、配置修改hexo根目录下的 _config.yml ➡️ theme: yilia-plus 3、更新12cd themes/yilia-plusgit pull 四、配置&#160;&#160;&#160;&#160;主题配置文件在主目录下的_config.yml，请根据自己需要修改使用。 完整配置例子，可以参考yilia-plus博客备份 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276# Header-菜单menu: 主页: / 技术笔记: https://zhousiwei.gitee.io/ibooks/ 随笔: /tags/随笔/# subNav-子导航subNav: github: \"#\" gitee: \"#\" # 码云 jianshu: \"#\" #简书 #csdn: \"#\" #rss: \"#\" #zhihu: \"#\" #qq: \"img/2434387555.jpg\" #weixin: \"img/weixin_.png\" #weibo: \"#\" #douban: \"#\" #segmentfault: \"#\" #bilibili: \"#\" #acfun: \"#\" #mail: \"mailto:zhousiwei0911@qq.com\" #facebook: \"#\" #google: \"#\" #twitter: \"#\" #linkedin: \"#\"# 悬停预览图片效果hover_effect: ## `global` 0: Set separately, 1: Enable global 2: Close global ## `global` 0: 分开设置, 1: 全局启用, 2: 全局关闭 global: 2 # SubNav-导航 subNav: true# RSS订阅(关于如何配置启用:https://www.jianshu.com/p/2aaac7a19736)rss: /atom.xml# 是否需要修改 root 路径# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，# 请将您的 url 设为 http://yoursite.com/blog 并把 / 设为 /blog/。root: /# Content# 文章太长，截断按钮文字excerpt_link: more# 文章卡片右下角常驻链接，不需要请设置为falseshow_all_link: '展开全文'# 数学公式mathjax: false# Open link in a new tab | 是否在新窗口打开链接open_in_new: article: true # 文章链接 menu: true # 导航菜单 subNav: true # 子菜单# 打赏# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏reward_type: 2# 打赏wordingreward_wording: '谢谢你请我吃糖果'# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpgalipay: /img/alipay.jpg# 微信二维码图片地址weixin: /img/weixin.png# 目录# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录toc: 1# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为falsetoc_hide_index: true# 目录为空时的提示toc_empty_wording: '目录，不存在的…'# 是否有快速回到顶部的按钮top: true# Miscellaneous# 百度统计baidu_analytics: ''google_analytics: ''# 网站图标favicon: /favicon.ico# 你的头像urlavatar: /img/head.jpg# 是否开启分享share_jia: true# 评论：1、畅言；2、Disqus；3、Gitment；4、Giteement# 不需要使用某项，直接设置值为false，或注释掉# 具体请参考wiki：https://github.com/JoeyBling/hexo-theme-yilia-plus/wiki# 1、畅言changyan_appid: falsechangyan_conf: false# 2、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia-plus的disqus: false# 3、Gitment----基于GitHub的评论系统(关闭请设置gitment_owner为false)# 关于如何集成:https://www.jianshu.com/p/ac7658cc912fgitment_owner: false #你的 GitHub ID# 是否使用官方js(false可以提升访问速度，本地修改过一部分的js，官方js可能会出现服务器不稳定，不太建议使用)gitment_remote: falsegitment_repo: '' #存储评论的 repo name(需要在Github创建)gitment_oauth: client_id: '' #client ID client_secret: '' #client secret# 4、Giteement----【国内用户建议使用这个，相对比较快】# 关于如何集成:https://www.jianshu.com/p/f5c4633524c7# 基于码云的评论系统(https://gitee.com/zhousiwei/giteement)giteement: enable: false # 是否启用码云评论系统 # 是否使用官方js(false可以提升访问速度) remote: false redirect_uri: '' # 应用回调地址(请和配置的第三方应用保持一致) # 不能更改(网上开源项目https://github.com/Rob--W/cors-anywhere作者提供的专门用来跨域服务器的配置) oauth_uri: https://cors-anywhere.herokuapp.com/https://gitee.com/oauth/token giteeID: '' # 你的码云账号英文名 # 存储评论的 repo name(需要在码云仓库创建公开仓库) repo: '' gitment_oauth: client_id: '' #client ID client_secret: '' #client secret# 访问量统计功能(不蒜子)busuanzi: enable: true site_visit: true # 站点访问量显示 article_visit: true # 文章访问量显示# 网易云音乐插件music: enable: false # 播放器尺寸类型(1：长尺寸、2：短尺寸) type: 2 #id: 1332647902 # 网易云分享的音乐ID(更换音乐请更改此配置项) autoPlay: true # 是否开启自动播放 # 提示文本(关闭请设置为false) text: '这似乎是首纯音乐，请尽情的欣赏它吧！'# 页面点击小红心clickLove: # (关闭请设置为false) enable: true# GitHub Ribbons(https://github.blog/2008-12-19-github-ribbons/)github: # (关闭请设置为false) url: https://github.com/JoeyBling/hexo-theme-yilia-plus# 页脚 Litten(此配置项已弃用)# 帮助我们让更多人可以更方便使用Hexo，请尽量不要修改此主题配置pageFooter: litten: GitHub:&lt;a href=\"https://github.com/JoeyBling/hexo-theme-yilia-plus\" target=\"_blank\"&gt;hexo-theme-yilia-plus&lt;/a&gt;# 开启百度站长平台主动推送(https://ziyuan.baidu.com/linksubmit/index)baidu_push: false# 版权声明# 版权声明type设定：0-关闭版权声明； 1-文章对应的md文件里有copyright: true属性，才有版权声明； 2-所有文章均有版权声明copyright_type: 2# 网站成立年份(默认为 2018，若填入年份小于当前年份，则显示为 2018-2019 类似的格式)since: 2018# Progress Bar | 页面加载进度条# Demo: http://github.hubspot.com/pace/docs/welcome/# type: barber-shop|big-counter|bounce|center-atom|center-circle|# center-radar|center-simple|corner-indicator|flash|flat-top|# loading-bar|mac-osx|minimal# color: black|blue|green|orange|pink|purple|red|silver|white|yellow|progressBar: enable: false type: 'minimal' # Keep Quotes | 保留引号避免出错(某些type会导致样式重叠排版错误) color: blue# Apple Touch icon 苹果图标(关闭请设置为false)apple_touch_icon: '/apple-touch-icon-180x180.png'# Tab Title Change | 标签页标题切换tab_title_change: enable: true left_tab_title: '(つェ⊂) 我藏好了哦~ ' return_tab_title: '(*´∇｀*) 被你发现啦~ '# https://github.com/willin/hexo-wordcount# 是否开启字数统计(关闭请设置enable为false)# 也可以单独在md文件里Front-matter设置`no_word_count: true`属性，来自定义关闭字数统计word_count: enable: true # 只在文章详情显示(不在首页显示) only_article_visit: true# 文字输入特效# https://github.com/disjukr/activate-power-modeactivate_power_mode: enable: true # 使输入模式丰富多彩 colorful: true # 是否开启摇动 shake: false# 看板娘动态模型插件## https://github.com/JoeyBling/live2d-widget.jslive2d: # (关闭请设置为false) enable: false # 模型名称(取值请参考：https://github.com/JoeyBling/hexo-theme-yilia-plus/wiki/live2d%E6%A8%A1%E5%9E%8B%E5%8C%85%E5%B1%95%E7%A4%BA) model: hibiki display: position: right # 显示位置：left/right(default: 'right') width: 145 # 模型的长度(default: 150) height: 315 # 模型的高度(default: 300) hOffset: 50 # 水平偏移(default: 0) #vOffset: -20 # 垂直偏移(default: -20) mobile: show: false # 是否在移动设备上显示(default: true) scale: 0.6 # 移动设备上的缩放(default: 0.5) react: opacity: 0.8 # 模型透明度(default: 0.7)# 样式定制 - 一般不需要修改，除非有很强的定制欲望…style: # 头像上面的背景颜色 # header: '#D3D1DC' header: '#4d4d4d' gif: # 是否启用左侧边栏动态图效果 enable: false # 自定义背景图路径(默认可以不设置，提供默认背景图) # path: /img/biubiubiu.gif # 右滑板块背景 slider: 'linear-gradient(200deg,#a0cfe4,#e8c37e)'# slider的设置slider: # 是否默认展开tags板块 showTags: false# 智能菜单# 如不需要，将该对应项置为false# 比如#smart_menu:# friends: falsesmart_menu: innerArchive: '所有文章' friends: '友链' aboutme: '关于我'# 友情链接friends: 技术笔记: #网站名称 #网站地址 url: https://zhousiwei.gitee.io/ibooks/ #网站图片(可忽略不写) img: https://zhousiwei.gitee.io/ibooks/favicon.ico #网站简介(可忽略不写) description: 记录工作和学习过程中的笔记：Java、前端开发、Hexo博客、聚合支付、Linux笔记、ElasticSearch、ELK日志分析 GitHub: url: https://github.com/JoeyBling 码云: url: https://gitee.com/zhousiwei 简书: url: https://www.jianshu.com/u/02cbf31a043a CSDN: url: https://blog.csdn.net/qq_30930805# 关于我aboutme: 主要涉及技术：&lt;br&gt;Java后端开发、聚合支付、&lt;br&gt;公众号开发、开源爱好者、Linux&lt;br&gt;&lt;br&gt;联系QQ:2434387555&lt;br&gt;&lt;br&gt;很惭愧&lt;br&gt;&lt;br&gt;只做了一点微小的工作&lt;br&gt;谢谢大家 Hexo博客优化 Hexo博客集成码云评论系统 Hexo博客集成Gitment评论 Hexo博客配置RSS插件 Hexo博客使用gulp压缩静态资源 新增Hexo博客文章置顶功能 Hexo博客添加helper-live2d动态模型插件 Hexo博客添加访问量统计 Hexo博客yilia主题添加背景音乐 （网易云音乐） 使用Hexo+GitHub搭建免费个人博客","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"}]},{"title":"关于npm install失败的解决方法","date":"2019-07-30T01:33:15.000Z","path":"2019/07/30/关于npm install失败的解决方法/","text":"可以尝试以下解决方案 1.授权执行1sudo npm install 2.运行高权限用户1sudo npm install --unsafe-perm 3.安装某个模块1sudo npm i 模块名 --unsafe-perms 4.清除代理1npm config set proxy false 5.清除缓存1npm cache clean","link":"","tags":[{"name":"日记本","slug":"日记本","permalink":"https://dreamfsk.github.io/tags/日记本/"}]},{"title":"Hexo编译文档时JS或HTML混乱解决方案","date":"2019-07-26T03:26:51.000Z","path":"2019/07/26/Hexo编译文档时JS或HTML混乱解决方案/","text":"Tips:前导必备 博主博客地址 博主使用的是hexo-theme-yilia-plus主题 之前为在 GitHub 博客上写自己的 html 网页，在 hexo 根目录下的 source 文件夹中放了自己的 js 文件，每次 hexo g 后，pubic 文件夹中的 js 文件就混乱了，与自己实际 js 不一致。 解决方案(跳过 hexo 渲染) Hexo 3.0 以上支持修改 Hexo 主目录下的 _config.yml 配置文件中的 skip_render 参数。 1234567891011skip_render: \"test.html\" # source 文件夹下指定文件skip_render: test/* # 单个文件夹下全部文件skip_render: test/*.md # 单个文件夹下指定类型文件skip_render: test/** # 单个文件夹下全部文件及子文件skip_render: # 多个文件夹以及其他情况 - test/* - test/*.html 博主自己的配置如下 1234567891011121314# 跳过 hexo 渲染skip_render: - anires/** - assets/** - gitment/** - baidu_sitepush/** - canvas_nest/** - docs/** - 'baidu_verify_QzGNSJ7F59.html' - '*.html' - '*.js' - README.md - '*.sh' - '*.txt' 注：若修改配置后不见效果，先执行 hexo clean 后再执行 hexo g 重新编译","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"}]},{"title":"Hexo博客集成码云评论系统","date":"2019-07-25T02:39:00.000Z","path":"2019/07/25/Hexo博客集成码云评论系统/","text":"Tips:前导必备 博主博客地址 博主使用的是hexo-theme-yilia-plus主题 简介 giteement系统是基于gitment的源码开发和扩展的 ➡️ https://gitee.com/zhousiwei/giteementgiteement还在继续维护优化中…欢迎小伙伴们加入一起维护 目前实现以下功能： 基于码云的issues来进行评论的,所以需要有码云账号。 实现了类似码云issues的回复功能，评论开头用@符号选择你要回复的人，回复完毕，如果你要回复的人登录码云，会有消息提示。 效果展示 ➡️ https://zhousiwei.gitee.io/ 1、配置第三方应用&#160;&#160;&#160;&#160;使用码云的issues作为评论系统，就要使用码云来登录评论，所以需要在码云上配置第三方应用。 注册一个新的第三方应用 ➡️ https://gitee.com/oauth/applications/new 应用名称(根据实际来填写) 应用描述(根据实际来填写) 应用主页(应用程序主页的完整URL) 应用回调地址(一般是博客的域名) 权限请选择issues、notes 2、配置hexo-theme-yilia-plus主题注册完成后得到Client ID和Client Secret 修改hexo-theme-yilia-plus主题的配置文件_config.yml12345678910111213giteement: enable: true # 是否启用码云评论系统 # 是否使用官方js(false可以提升访问速度) remote: false redirect_uri: https://zhousiwei.gitee.io/yilia-plus-demo # 应用回调地址(请和配置的第三方应用保持一致) # 不能更改(网上开源项目https://github.com/Rob--W/cors-anywhere作者提供的专门用来跨域服务器的配置) oauth_uri: https://cors-anywhere.herokuapp.com/https://gitee.com/oauth/token giteeID: zhousiwei # 你的码云账号英文名 # 存储评论的 repo repo: yilia-plus-demo gitment_oauth: client_id: '*********' #client ID client_secret: '*********' #client secret 3、重新编译运行即可查看效果1hexo s -g 针对不同文章的date属性生成id，只要保证每篇文章有date属性并且不重复即可 hexo-theme-yilia-plus配置Demo ➡️ https://gitee.com/zhousiwei/yilia-plus-demo 4、待解决问题 giteement的UI是直接使用gitment的UI，不是很好看，后期准备优化。 新增文章的时候需要登录自己的gitee账号，点击评论初始化按钮。(后面考虑实现自动初始化 Gitment 评论脚本) 效果图1、整体UI 2、@回复功能 其他主题例子1、主题landscape中使用修改themes/landscape/layout/index.ejs文件 修改themes/landscape/layout/_partial/article.ejs文件 增加themes/landscape/layout/_partial/comment.ejs1234567891011121314151617181920212223242526&lt;% if (!index &amp;&amp; post.comments &amp;&amp; theme.giteement &amp;&amp; theme.giteement.enable)&#123; %&gt; &lt;div id=&quot;giteement-ctn&quot;&gt;&lt;/div&gt; &lt;% if (theme.giteement &amp;&amp; theme.giteement.remote)&#123; %&gt; &lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/wd-discuss.css&quot;&gt; --&gt; &lt;!-- &lt;script src=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/discuss_hexo.js&quot;&gt;&lt;/script&gt; --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/default.css&quot;&gt; &lt;script src=&quot;https://giteement.oss-cn-beijing.aliyuncs.com/giteement.browser.js&quot;&gt;&lt;/script&gt; &lt;% &#125; else &#123; %&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%=config.root%&gt;assets/default.css&quot;&gt; &lt;script src=&quot;&lt;%=config.root%&gt;assets/giteement.browser.js&quot;&gt;&lt;/script&gt; &lt;% &#125; %&gt; &lt;script&gt; var giteement = new Giteement(&#123; id: &apos;&lt;%=page.date.format(&apos;YYYYMMDDHHmmss&apos;)%&gt;&apos;, owner: &apos;&lt;%=theme.giteement.giteeID%&gt;&apos;, repo: &apos;&lt;%=theme.giteement.repo%&gt;&apos;, backcall_uri: &apos;&lt;%=theme.giteement.redirect_uri%&gt;&apos;, oauth_uri: &apos;&lt;%=theme.giteement.oauth_uri%&gt;&apos;, oauth: &#123; client_id: &apos;&lt;%=theme.giteement.gitment_oauth.client_id%&gt;&apos;, client_secret: &apos;&lt;%=theme.giteement.gitment_oauth.client_secret%&gt;&apos; &#125;, &#125;) giteement.render(&apos;giteement-ctn&apos;) &lt;/script&gt;&lt;% &#125; %&gt; 2、主题next中使用修改themes/next/layout/index.swig文件 修改themes/next/layout/_partials/comments.swig文件 把theme.giteement.ClientID和theme.giteement.ClientSecret改为theme.giteement.gitment_oauth.client_id和theme.giteement.gitment_oauth.client_secret 转载自原作者eillott的文章，进行修改了一部分，并且集成了hexo-theme-yilia-plus主题","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"}]},{"title":"Hexo博客集成Gitment评论","date":"2019-07-24T08:52:00.000Z","path":"2019/07/24/Hexo博客集成Gitment评论/","text":"Tips:前导必备 博主博客地址 博主使用的是hexo-theme-yilia-plus主题 Gitment 是一位作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。 1、注册 OAuth Application 注册一个新的 OAuth Application ➡️ OAuth Application Application name 应用名称(根据实际来填写) Homepage URL 主页网址(应用程序主页的完整URL) Application description 应用说明(应用描述) Authorization callback URL 授权回调URL(一般是博客的域名) 2、配置hexo-theme-yilia-plus主题注册完成后得到Client ID和Client Secret 修改hexo-theme-yilia-plus主题的配置文件_config.yml123456gitment_owner: JoeyBling #你的 GitHub IDgitment_remote: false # 是否使用官方js(false可以提升访问速度)gitment_repo: 'yilia-plus-demo' #存储评论的 repogitment_oauth: client_id: '*********' #client ID client_secret: '*********' #client secret 3、重新编译运行即可查看效果1hexo s -g hexo-theme-yilia-plus配置Demo ➡️ https://joeybling.github.io/yilia-plus-demo","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"}]},{"title":"Hexo博客配置RSS插件","date":"2019-07-23T07:49:00.000Z","path":"2019/07/23/Hexo博客配置RSS插件/","text":"Tips:前导必备 博主博客地址 博主使用的是hexo-theme-yilia-plus主题 1、安装rss插件 在站点根目录下安装 1npm install hexo-generator-feed 2、配置_config.yml文件，启用插件12345678# Extensionsplugins: hexo-generator-feed#Feed Atomfeed: type: atom path: atom.xml limit: 20 3、在hexo-theme-yilia-plus主题添加RSS订阅配置(可以跳过此步骤) theme-yilia-plus 12# RSS订阅rss: /atom.xml 4、生成RSS订阅文件1hexo g","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"}]},{"title":"gulp-babel 取消严格模式(\"use strict\")","date":"2019-07-23T01:38:00.000Z","path":"2019/07/23/gulp-babel取消严格模式use strict/","text":"插件地址 ➡️ https://github.com/genify/babel-plugin-transform-remove-strict-mode 1、安装1npm install babel-plugin-transform-remove-strict-mode 2、使用 添加内容到.babelrc文件 123&#123; \"plugins\": [\"transform-remove-strict-mode\"]&#125; 重新执行打包命令即可","link":"","tags":[{"name":"日记本","slug":"日记本","permalink":"https://dreamfsk.github.io/tags/日记本/"}]},{"title":"Hexo博客使用gulp压缩静态资源","date":"2019-07-22T08:35:00.000Z","path":"2019/07/22/Hexo博客使用gulp压缩静态资源/","text":"Tips:前导必备 博主博客地址 博主使用的是hexo-theme-yilia-plus主题 1、全局安装gulp123npm install gulp -g# 查看版本gulp -v 2、安装gulp插件 在站点根目录下安装 12345678910111213npm install gulp --savenpm install gulp-minify-css --savenpm install gulp-uglify --savenpm install gulp-htmlmin --savenpm install gulp-htmlclean --savenpm install gulp-imagemin --save# 解决【Gulp打包问题】 GulpUglifyError: unable to minify JavaScript# 解决 gulp-uglify 压缩JavaScript 不兼容 es5 语法的问题npm install babel-core@6.26.3 --savenpm install gulp-babel@7.0.1 --savenpm install babel-preset-es2015@6.24.1 --save# gulp-babel 取消严格模式方法(\"use strict\")npm install babel-plugin-transform-remove-strict-mode --save 问题：如果安装gulp-imagemin错误请执行以下语句sudo npm i gulp-imagemin --unsafe-perms 3、创建gulpfile.js文件 在 Hexo 站点下新建gulpfile.js文件，文件内容如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');var imagemin = require('gulp-imagemin');var babel = require('gulp-babel');// 压缩css文件gulp.task('minify-css', function (done) &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public')); done();&#125;);// 压缩html文件gulp.task('minify-html', function (done) &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public')); done();&#125;);// 压缩js文件gulp.task('minify-js', function (done) &#123; return gulp.src(['./public/**/*.js', '!./public/**/*.min.js']) .pipe(babel(&#123; //将ES6代码转译为可执行的JS代码 presets: ['es2015'] // es5检查机制 &#125;)) .pipe(uglify()) .pipe(gulp.dest('./public')); done();&#125;);// 压缩 public/images 目录内图片(Version&lt;3)// gulp.task('minify-images', function () &#123;// gulp.src('./public/images/**/*.*')// .pipe(imagemin(&#123;// optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级）// progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片// interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染// multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化// &#125;))// .pipe(gulp.dest('./public/images'));// &#125;);// 压缩 public/images 目录内图片(Version&gt;3)gulp.task('minify-images', function (done) &#123; gulp.src('./public/images/**/*.*') .pipe(imagemin([ imagemin.gifsicle(&#123;interlaced: true&#125;), imagemin.jpegtran(&#123;progressive: true&#125;), imagemin.optipng(&#123;optimizationLevel: 5&#125;), imagemin.svgo(&#123; plugins: [ &#123;removeViewBox: true&#125;, &#123;cleanupIDs: false&#125; ] &#125;) ])) .pipe(gulp.dest('./public/images')); done();&#125;);//4.0以前的写法 //gulp.task('default', [// 'minify-html', 'minify-css', 'minify-js', 'minify-images'//]);//4.0以后的写法// 执行 gulp 命令时执行的任务gulp.task('default', gulp.series(gulp.parallel('minify-html', 'minify-css', 'minify-js', 'minify-images')), function () &#123; console.log(\"----------gulp Finished----------\"); // Do something after a, b, and c are finished.&#125;); 4、创建.babelrc文件 在 Hexo 站点下新建.babelrc文件，文件内容如下： 1234&#123; 'presets': ['es2015'], \"plugins\": [\"transform-remove-strict-mode\"]&#125; 5、静态资源压缩 只需要每次在执行 generate 命令后执行 gulp 就可以实现对静态资源的压缩 12hexo ggulp","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"}]},{"title":"Git分支的创建、删除、切换","date":"2019-07-01T02:06:00.000Z","path":"2019/07/01/Git分支的创建、删除、切换/","text":"1、本地创建新分支并切换到新分支1# git checkout -b 分支名 2、提交分支到远程仓库1# git push origin 分支名 3、切换分支1# git checkout 分支名 4、删除远程分支1# git push origin --delete 分支名 5、删除本地分支1# git branch -D 分支名 Tips：其他分支命令 查看当前分支 git branch 查看所属分支 git branch -a","link":"","tags":[{"name":"日记本","slug":"日记本","permalink":"https://dreamfsk.github.io/tags/日记本/"}]},{"title":"Git彻底删除历史提交记录的方法","date":"2019-06-05T02:22:00.000Z","path":"2019/06/05/Git彻底删除历史提交记录的方法/","text":"1、查看Git提交记录1# git log 2、找到需要回滚到的提交点，复制它的hash值 1# git reset --hard 你复制的hash值 3、将当前指向的head推到git1# git push --force","link":"","tags":[{"name":"日记本","slug":"日记本","permalink":"https://dreamfsk.github.io/tags/日记本/"}]},{"title":"玩转MySQL优化命令","date":"2019-05-06T10:05:00.000Z","path":"2019/05/06/玩转MySQL优化命令/","text":"1、MySQL更改为只能本地登录123# use mysql;# select user,host,Password from user where user='root';# delete from user where user='root' and host='%'; 2、MySQL授予外网登陆权限grant all privileges on *.* to 授予外网登陆的用户名@&#39;%&#39; identified by &#39;密码&#39; WITH GRANT OPTION; 12# grant all privileges on *.* to root@'%' identified by 'root' WITH GRANT OPTION;# flush privileges; 3、更改MySQL的存储目录","link":"","tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://dreamfsk.github.io/tags/MySQL/"}]},{"title":"Hexo博客添加helper-live2d动态模型插件","date":"2019-05-05T08:35:00.000Z","path":"2019/05/05/Hexo博客添加helper-live2d动态模型插件/","text":"Tips:前导必备 博主博客地址 博主使用的是hexo-theme-yilia-plus主题 插件的github地址hexo-helper-live2d live2d模型仓库 必须有Node环境 ➡️ Linux下安装node和npm 1、安装模块&#160;&#160;&#160;&#160;在hexo根目录执行命令 1# npm install --save hexo-helper-live2d 2、下载模型&#160;&#160;&#160;&#160;作者各种模型包展示 ➡️ hexo live2d插件 2.0 ! live2d模型仓库 live2d-widget-model-chitose live2d-widget-model-epsilon2_1 live2d-widget-model-gf live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru) live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru) live2d-widget-model-haruto live2d-widget-model-hibiki live2d-widget-model-hijiki live2d-widget-model-izumi live2d-widget-model-koharu live2d-widget-model-miku live2d-widget-model-ni-j live2d-widget-model-nico live2d-widget-model-nietzsche live2d-widget-model-nipsilon live2d-widget-model-nito live2d-widget-model-shizuku live2d-widget-model-tororo live2d-widget-model-tsumiki live2d-widget-model-unitychan live2d-widget-model-wanko live2d-widget-model-z16 使用npm install {packagename}安装模型 12---笔者使用的模型# npm install live2d-widget-model-hibiki 3、详细配置在Hexo的 _config.yml 文件或主题的 _config.yml 文件中添加配置.参阅 live2d-widget.js API 博主配置文件示例12345678910111213141516171819202122232425262728293031# Live2D## https://github.com/EYHN/hexo-helper-live2d## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-initlive2d: enable: true #enable: false scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 # scriptFrom: jsdelivr # jsdelivr CDN # scriptFrom: unpkg # unpkg CDN # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget-model-hibiki # use: live2d-widget-model-wanko # npm-module package name # use: wanko # 博客根目录/live2d_models/ 下的目录名 # use: ./wives/wanko # 相对于博客根目录的路径 # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url display: position: right width: 145 height: 315 mobile: show: true # 是否在移动设备上显示 scale: 0.5 # 移动设备上的缩放 react: opacityDefault: 0.7 opacityOnHover: 0.8 4、作者寄语 Everything is ok. But you have to do by yourself.","link":"","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dreamfsk.github.io/tags/Hexo/"},{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]},{"title":"vi/vim 粘贴内容时,保留原文件内容格式","date":"2019-05-05T07:33:00.000Z","path":"2019/05/05/vi或vim粘贴内容时,保留原文件内容格式/","text":"在vi/vim普通模式下执行:set paste命令，再按 i 插入就会保留原文件格式 :set paste 打开粘贴命令 :set nopaste 关闭命令 :h paste 帮助","link":"","tags":[{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]},{"title":"新增Hexo博客文章置顶功能","date":"2019-02-25T03:40:00.000Z","path":"2019/02/25/新增Hexo博客文章置顶功能/","text":"修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js需要添加的代码： 12345678910111213posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); 以下是最终的generator.js内容： 12345678910111213141516171819202122232425262728293031323334'use strict';var pagination = require('hexo-pagination');module.exports = function(locals) &#123; var config = this.config; var posts = locals.posts.sort(config.index_generator.order_by); posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); var paginationDir = config.pagination_dir || 'page'; var path = config.index_generator.path || ''; return pagination(path, posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 如何使用：在需要置顶的文章添加top属性即可，排序从小到大 博客效果： Tips:常用hexo命令123# hexo n == hexo new# hexo g == 生成# hexo s == 启动服务","link":"","tags":[{"name":"日记本","slug":"日记本","permalink":"https://dreamfsk.github.io/tags/日记本/"}]},{"title":"IDEA设置后端代码开发规范","date":"2019-01-23T02:33:00.000Z","path":"2019/01/23/IDEA设置后端代码开发规范/","text":"1、IDEA 配置svn提交svn报错： 1.1、下载：https://www.visualsvn.com/downloads/ 1.2、修改IDEA配置指向的路径2、IDEA 设置 Tab 键为 4 个空格Scheme 选择 Project ,在下面把取消勾选 Use tab character 3、IDEA 设置编码格式为 UTF-8 4、IDEA 设置换行符为 Unix 编码格式 5、IDEA 设置类注释模板 1234/** * * @author Created by 思伟 on $&#123;DATE&#125; */","link":"","tags":[{"name":"日记本","slug":"日记本","permalink":"https://dreamfsk.github.io/tags/日记本/"}]},{"title":"SpringBoot 2.0 更新记录","date":"2018-08-21T02:43:00.000Z","path":"2018/08/21/SpringBoot 2.0 更新记录/","text":"1、Spring Boot 2.0 要求Java 版本必须8以上2、配置属性的重定位 Old property New property server.context-path server.servlet.context-path server.context-parameters.* server.servlet.context-parameters.* server.jsp.class-name server.servlet.jsp.class-name server.jsp.init-parameters.* server.servlet.jsp.init-parameters.* server.jsp.registered server.servlet.jsp.registered server.servlet-path server.servlet.path","link":"","tags":[{"name":"Java","slug":"Java","permalink":"https://dreamfsk.github.io/tags/Java/"}]},{"title":"Linux下更改MySQL的存储目录","date":"2018-08-06T09:06:00.000Z","path":"2018/08/06/Linux下更改MySQL的存储目录/","text":"重要步骤：一定要先停止Mysql1# service mysqld stop 1、创建目标文件夹12# mkdir -p /data/mysql# chown -R mysql.mysql /data/mysql/ 2、迁移命令1# mysql_install_db --user=mysql --basedir=/usr --datadir=/data/mysql 3、为避免麻烦，删掉原文件夹/var/lib/mysql1# rm -rf /var/lib/mysql/* 4、修改/etc/my.cnf配置文件12[mysqld]datadir=/data/mysql 5、启动mysql12# chkconfig mysqld on# service mysqld restart","link":"","tags":[{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]},{"title":"SpringBoot设置默认首页","date":"2018-04-26T07:49:00.000Z","path":"2018/04/26/SpringBoot设置默认首页/","text":"1234567891011@Configurationpublic class DefaultView extends WebMvcConfigurerAdapter&#123; @Override public void addViewControllers(ViewControllerRegistry registry) &#123; super.addViewControllers(registry); //主页 registry.addViewController(\"/\").setViewName(\"forward:/index\"); &#125; &#125;","link":"","tags":[{"name":"Java","slug":"Java","permalink":"https://dreamfsk.github.io/tags/Java/"}]},{"title":"解决MariaDB中文乱码","date":"2018-04-26T07:46:00.000Z","path":"2018/04/26/解决MariaDB中文乱码/","text":"1、检查自己数据库编码12# mysql -uroot -proot# show VARIABLES like 'char%'; 2、更改Client和Server编码都是UTF-81# vim /etc/my.cnf.d/server.cnf 在server.cnf中[mysqld]标签下添加代码 12init-connect=&apos;SET NAMES utf8&apos;character-set-server = utf8 重启MariaDB即可123# systemctl restart mariadb--- 如果已经添加为服务# service mysqld restart","link":"","tags":[{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]},{"title":"Linux或Win下安装node和npm","date":"2018-04-20T07:31:00.000Z","path":"2018/04/20/Linux或Win下安装node和npm/","text":"一、离线安装Node 官网下载链接：https://nodejs.org/zh-cn/download/node和npm对应关系：https://nodejs.org/zh-cn/download/releases/ 解压目录 1234# cd /usr/local# yum install -y xz# xz -d node-v8.11.1-linux-x64.tar.xz# tar -xf node-v8.11.1-linux-x64.tar 这里想要全局使用npm 和 node,就需要做相关软链，如下！ 123# cd /usr/local/bin# ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/npm# ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/node 然后即可在任意位置执行 node -v npm -v 查看相应的版本，则安装完成！ 二、yum安装node和npm(Linux快速安装)12# yum install epel-release -y# yum install nodejs -y 三、使用淘宝镜像站(建议跳过此步骤，不建议使用)1234# npm config get registry // https://registry.npmjs.org/# npm config set registry https://registry.npm.taobao.org---- 验证是否配置成功# npm config get registry 四、指定全局安装路径和缓存路径(看自己选择是否使用) 设置全局模块的安装路径到 node_global 文件夹，设置缓存到 node_cache 文件夹 12345# npm config set prefix D:\\nodejs\\node_global# npm config set cache D:\\nodejs\\node_cache---- 验证是否配置成功# npm config get cache# npm ls -g 五、安装 cnpm(看自己选择是否使用)12# npm install cnpm -g --registry=https://registry.npm.taobao.org# cnpm -v Tips: npm默认的全局目录可执行命令查看1# npm config ls","link":"","tags":[{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]},{"title":"Linux配置SSH Key到GitHub","date":"2018-04-17T06:48:40.000Z","path":"2018/04/17/Linux配置SSH-Key到GitHub/","text":"1、生成SSH Key首先检查下本机是否已经安装了SSH，在终端输入ssh即可： 如果没有安装进行yum安装 1# yum -y install openssh-clients 接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。 id_rsa.pub为公钥，id_rsa为私钥，它们都是隐藏文件。那么如何查看它们的内容呢？只需要继续执行以下两条命令即可。 12# cd .ssh/# cat id_rsa.pub 2、添加SSH Key到GitHub上 接着执行下面操作： 点击New SSH Key按钮后进行Key的填写操作，完成SSH Key的添加。如下图： 添加SSH Key成功之后，继续输入命令进行测试。 1# ssh -T git@github.com 出现上图结果则说明添加SSH Key成功。","link":"","tags":[{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]},{"title":"Linux下安装Git","date":"2018-04-17T05:41:00.000Z","path":"2018/04/17/Linux下安装Git/","text":"1、使用yum安装12# yum -y install git# yum remove git 2、源代码安装 1234567891011121314151617---安装依赖的包# yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker zlib# cd /usr/local----下载git源码# wget https://github.com/git/git/archive/v2.21.0.tar.gz----解压git源码# tar -zxvf v2.21.0.tar.gz# cd git-2.21.0/# mkdir /usr/local/git----编译安装到指定目录# make prefix=/usr/local/git all# sudo make prefix=/usr/local/git install# vim /etc/profile----添加在文件的最后一行export PATH=/usr/local/git/bin:$PATH# source /etc/profile# git --version 3、FAQ1、 如果解压时出现报错，建议手动下载git源码包然后上传到服务器1234gzip: stdin: unexpected end of filetar: Unexpected EOF in archivetar: Unexpected EOF in archivetar: Error is not recoverable: exiting now","link":"","tags":[{"name":"Linux","slug":"Linux","permalink":"https://dreamfsk.github.io/tags/Linux/"}]}]